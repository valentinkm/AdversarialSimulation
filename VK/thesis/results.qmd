---
fig-cap-location: top
format:
  pdf:
    fontsize: 12pt
    linestretch: 1.5
    geometry: "left=25mm, right=20mm, top=20mm, bottom=20mm"
    classoption: oneside
    papersize: a4
    header-includes:
      - \usepackage{float}
      - \floatplacement{table}{H}
      - \usepackage{tikz}
      - \usetikzlibrary{arrows.meta, positioning, calc}
      - \usepackage{geometry}
      - \geometry{margin=1in}
      - \usepackage{pdflscape}
      - \usepackage{afterpage}
      - \usepackage{lscape}
      - \newcommand{\blandscape}{\begin{landscape}}
      - \newcommand{\elandscape}{\end{landscape}}

fontsize: 12pt
engine: knitr
bibliography: ../../bibliography.bib
---

```{r, include=FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE)

library(dplyr)
library(tidyr)
library(kableExtra)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
library(ggh4x)
```

```{r}
# Convergence Rate
conv_rate_study_1 <- readRDS("../simulation/results/convergence_rate1.rds")
conv_rate_study_2 <- readRDS("../simulation/results/convergence_rate2.rds")
conv_rate_study_3 <- readRDS("../simulation/results/convergence_rate3.rds")
```

\blandscape
::: {#tbl-cr-study1}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}
# convergence rate plot for study 1

conv_rate1 <- conv_rate_study_1 %>%
  mutate(
    ConvergenceRate = ConvergedCount / (ConvergedCount + NotConvergedCount + ImproperSolutionCount),
    ProperSolutionRate = 1 - (ImproperSolutionCount / ConvergedCount),
    CombinedLabel = paste(sprintf("%.1f", ConvergenceRate), "\n(", sprintf("%.1f", ProperSolutionRate), ")", sep = ""),
    method = gsub("_", " ", method),
    model_type = case_when(
      model_type == "1.1" ~ "no measurement MP",
      model_type == "1.2" ~ "cross loadings",
      model_type == "1.3" ~ "correlated errors & reversed path",
      model_type == "1.4" ~ "bidirectional path",
      TRUE ~ model_type )
  ) %>%
  select(model_type, N, reliability, method, ConvergenceRate, ProperSolutionRate, CombinedLabel)


# Create the heatmap with labeled metrics and heatmap fill
p_convergence_heatmap <- conv_rate1 %>%
  ggplot(aes(x = factor(N, labels = paste("N =", c(100, 400, 6400))), y = model_type)) +
  geom_tile(aes(fill = ConvergenceRate), color = "white") +
  geom_text(aes(label = CombinedLabel), size = 2.5, color = "black") +
  scale_fill_gradient2(low = "#ff6f61", mid = "#ffa500", high = "#7fc97f", midpoint = 0.5, 
                       limits = c(0, 1), oob = scales::squish, name = "Convergence Rate (%)") +
  ggh4x::facet_nested(factor(reliability, labels = paste("r =", c(0.3, 0.5, 0.7))) ~ method, 
                      scales = "free", space = "free", switch = "y") +
  theme_bw() +
  theme(
    text = element_text(size = 8),
    axis.text.x = element_text(size = 7, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 7),
    legend.position = "right", 
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 7),
    strip.text.y = element_text(size = 7),
    strip.text.x = element_text(size = 15),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  labs(
    x = "Sample Size",
    y = "Model Type"
  ) +
  scale_y_discrete(expand = c(0, 0), position = "right")

# Print the convergence heatmap
print(p_convergence_heatmap)
ggsave("tables/convergence_rate_study1.png", plot = p_convergence_heatmap, width = 12, height = 6.5)
```

*Note* This figure shows the convergence rate and the rate of proper solutions for the different methods and conditions in simulation study 1.

Convergence Rate and Rate of Improper Solutions (Study 1)

:::
\elandscape

\blandscape
::: {#tbl-cr-study2}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}
# convergence rate plot for study 2

# Prepare the data with formatted rate values between 0 and 1 for study 2
conv_rate2 <- conv_rate_study_2 %>%
  mutate(
    ConvergenceRate = ConvergedCount / (ConvergedCount + NotConvergedCount + ImproperSolutionCount),
    ProperSolutionRate = 1 - (ImproperSolutionCount / ConvergedCount),
    CombinedLabel = paste(sprintf("%.1f", ConvergenceRate), "\n(", sprintf("%.1f", ProperSolutionRate), ")", sep = "")
  ) %>%
  select(model_type, N, reliability, R_squared, method, ConvergenceRate, ProperSolutionRate, CombinedLabel)



# Create the heatmap for study 2 with centered values
p_convergence_heatmap_study2 <- conv_rate2 %>%
  ggplot(aes(x = factor(N, labels = paste("N =", c(100, 400, 6400))), y = model_type)) +
  geom_tile(aes(fill = ConvergenceRate), color = "white") +
  geom_text(aes(label = CombinedLabel), size = 3, color = "black", vjust = 0.5, lineheight = 0.9) + # Center text vertically with adjusted line height
  scale_fill_gradient2(low = "#ff6f61", mid = "#ffa500", high = "#7fc97f", midpoint = 0.5, 
                       limits = c(0, 1), oob = scales::squish, name = "Convergence Rate") +
  ggh4x::facet_nested(factor(reliability, labels = paste("r =", c(0.3, 0.5, 0.7))) ~ method + factor(R_squared), 
                      scales = "free", space = "free", switch = "y") +
  theme_bw() +
  theme(
    text = element_text(size = 10),
    axis.text.x = element_text(size = 8, angle = 30, hjust = 1), 
    axis.text.y = element_text(size = 8),
    legend.position = "right", 
    legend.title = element_text(size = 10),
    legend.text = element_text(size = 8),
    strip.text.y = element_text(size = 10),
    strip.text.x = element_text(size = 10),
    strip.placement = "outside",
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    panel.spacing = unit(0.5, "lines")
  ) +
  labs(
    x = "Sample Size",
    y = "Model Type"
  ) +
  scale_y_discrete(expand = c(0, 0), position = "right")

# Print the heatmap for study 2
print(p_convergence_heatmap_study2)
ggplot2::ggsave("tables/convergence_rate_study2.png", plot = p_convergence_heatmap_study2, width = 12, height = 6.5)
```

*Note* This figure shows the convergence rate and the rate of proper solutions in brackets for the different methods and conditions in simulation study 2.

Convergence Rate and Rate of Proper Solutions (Study 2)

:::
\elandscape

\blandscape
::: {#tbl-cr-study3}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}
# convergence rate plot for study 3
conv_rate3 <- conv_rate_study_3 %>%
  mutate(
    ConvergenceRate = ConvergedCount / (ConvergedCount + NotConvergedCount + ImproperSolutionCount),
    ProperSolutionRate = 1 - (ImproperSolutionCount / ConvergedCount),
    CombinedLabel = paste(sprintf("%.1f", ConvergenceRate), "\n(", sprintf("%.1f", ProperSolutionRate), ")", sep = "")
  ) %>%
  select(model_type, N, reliability, method, ConvergenceRate, ProperSolutionRate, CombinedLabel)

# Create the heatmap for study 3 with centered values
p_convergence_heatmap_study3 <- conv_rate3 %>%
  ggplot(aes(x = factor(N, labels = paste("N =", c(50, 100, 250, 400))), y = model_type)) +
  geom_tile(aes(fill = ConvergenceRate), color = "white") +
  geom_text(aes(label = CombinedLabel), size = 2.5, color = "black") +
  scale_fill_gradient2(low = "#ff6f61", mid = "#ffa500", high = "#7fc97f", midpoint = 0.5, 
                       limits = c(0, 1), oob = scales::squish, name = "Convergence Rate") +
  ggh4x::facet_nested(factor(reliability, labels = paste("r =", c(0.3, 0.5, 0.7))) ~ method, 
                      scales = "free", space = "free", switch = "y") +
  theme_bw() +
  theme(
    text = element_text(size = 8),
    axis.text.x = element_text(size = 7, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 7),
    legend.position = "right", 
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 7),
    strip.text.y = element_text(size = 7),
    strip.text.x = element_text(size = 7),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  labs(
    x = "Sample Size",
    y = "Model Type"
  ) +
  scale_y_discrete(expand = c(0, 0), position = "right")

print(p_convergence_heatmap_study3)
ggsave("tables/convergence_rate_study3.png", plot = p_convergence_heatmap_study3, width = 12, height = 6.5)
```

*Note* This figure shows the convergence rate and the rate of improper solutions for the different methods and conditions in simulation study 3.

Convergence Rate and Rate of Improper Solutions (Study 3)

:::
\elandscape

```{r}
param_summary_study_1 <- readRDS("../simulation/results/parameter_wise_summary_study1.rds")
aggr_summary_study_1 <- readRDS("../simulation/results/aggregated_summary_study1.rds")

param_summary_study_2 <- readRDS("../simulation/results/parameter_wise_summary_study2.rds")
aggr_summary_study_2 <- readRDS("../simulation/results/aggregated_summary_study2.rds")

param_summary_study_3 <- readRDS("../simulation/results/parameter_wise_summary_study3.rds")
aggr_summary_study_3 <- readRDS("../simulation/results/aggregated_summary_study3.rds")

# Prepare data for study 1 parameterwise bias plot:
plot_data_study_1 <- param_summary_study_1 %>%
  select(N, reliability, method, parameter, Bias, model_type) %>%
  mutate(
    N = factor(N, levels = c(100, 400, 6400)),
    reliability = factor(reliability, levels = c(0.3, 0.5, 0.7)),
    method = factor(method, levels = unique(method)), 
    method <- gsub("_", " ", method),
    model_type = case_when(
      model_type == "1.1" ~ "no measurement MP",
      model_type == "1.2" ~ "cross loadings",
      model_type == "1.3" ~ "correlated errors & reversed path",
      model_type == "1.4" ~ "bidirectional path",
      TRUE ~ model_type 
    ),
    reliability = factor(paste("r =", reliability), levels = paste("r =", c(0.3, 0.5, 0.7)))
  ) %>%
  arrange(parameter) %>%
  mutate(parameter = factor(parameter, levels = unique(parameter)))

# Prepare data for aggregated bias plot study 1:
plot_data_aggregated_study1 <- aggr_summary_study_1 %>%
  select(model_type, N, reliability, method, mean_Bias, mean_RelativeBias) %>%
  mutate(
    N = factor(N, levels = c(100, 400, 6400)),
    reliability = factor(reliability, levels = c(0.3, 0.5, 0.7)),
    method = factor(method, levels = unique(method)),
    method = gsub("_", " ", method),
    model_type = case_when(
      model_type == "1.1" ~ "no measurement MP",
      model_type == "1.2" ~ "cross loadings",
      model_type == "1.3" ~ "correlated errors & reversed path",
      model_type == "1.4" ~ "bidirectional path",
      TRUE ~ model_type
    ),
    reliability = factor(paste("r =", reliability), levels = paste("r =", c(0.3, 0.5, 0.7)))
  )


# Prepare data for study 2 parameterwise bias plot:
misspecified_paths <- c("f3~f1", "f4~f3", "f3~f2")
plot_data_study_2 <- param_summary_study_2 %>%
  filter(R_squared == 0.4, b == 3) %>% 
  select(N, reliability, method, parameter, Bias, model_type) %>%
  mutate(
    N = factor(N, levels = c(100, 400, 6400)),
    reliability = factor(reliability, levels = c(0.3, 0.5, 0.7)),
    method = factor(method, levels = unique(method)), 
    method = gsub("_", " ", method),
    model_type = case_when(
      model_type == "2.1" ~ "no measurement MP",
      model_type == "2.2_exo" ~ "exogenous",
      model_type == "2.2_endo" ~ "endogenous",
      model_type == "2.2_both" ~ "endo- & exogenous",
      TRUE ~ model_type
    ),
    reliability = factor(paste("r =", reliability), levels = paste("r =", c(0.3, 0.5, 0.7)))
  ) %>%
  arrange(parameter) %>%
  mutate(parameter = factor(parameter, levels = unique(parameter)))


# Prepare data for study 3 parameterwise bias plot:
plot_data_study_3 <- param_summary_study_3 %>%
  select(N, reliability, method, parameter, Bias, model_type) %>%
  mutate(
    N = factor(N, levels = c(50, 100, 250, 400)),
    reliability = factor(reliability, levels = c(0.3, 0.5, 0.7)),
    method = factor(method, levels = unique(method)), 
    method = gsub("_", " ", method),
    model_type = case_when(
      model_type == "3.1" ~ "positive CL",
      model_type == "3.2" ~ "positive CR",
      model_type == "3.1_negative" ~ "negative CL",
      model_type == "3.2_negative" ~ "negative CR",
      TRUE ~ model_type
    ),
    model_type = factor(model_type, levels = c("positive CL", "negative CL", "positive CR", "negative CR")),
    reliability = factor(paste("r =", reliability), levels = paste("r =", c(0.3, 0.5, 0.7)))
  ) %>%
  arrange(parameter) %>%
  mutate(parameter = factor(parameter, levels = unique(parameter)))

# Prepare data for aggregated bias plot study 3:
plot_data_aggregated_study3 <- aggr_summary_study_3 %>%
  select(model_type, N, reliability, method, mean_Bias, mean_RelativeBias) %>%
  mutate(
    N = factor(N, levels = c(50, 100, 250, 400)),
    reliability = factor(reliability, levels = c(0.3, 0.5, 0.7)),
    method = factor(method, levels = unique(method)),
    method = gsub("_", " ", method),
    model_type = case_when(
      model_type == "3.1" ~ "positive CL",
      model_type == "3.2" ~ "positive CR",
      model_type == "3.1_negative" ~ "negative CL",
      model_type == "3.2_negative" ~ "negative CR",
      TRUE ~ model_type
    ),
    model_type = factor(model_type, levels = c("positive CL", "negative CL", "positive CR", "negative CR")),
    reliability = factor(paste("r =", reliability), levels = paste("r =", c(0.3, 0.5, 0.7)))
  )

```

\blandscape
::: {#tbl-abs-bias-parameterwise-study1}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}
# Generate a full grid of all possible combinations
full_grid <- expand.grid(
  N = factor(c(100, 400, 6400), levels = c(100, 400, 6400)),
  reliability = factor(paste("r =", c(0.3, 0.5, 0.7)), levels = paste("r =", c(0.3, 0.5, 0.7))),
  method = unique(plot_data_study_1$method),
  parameter = unique(plot_data_study_1$parameter),
  model_type = unique(plot_data_study_1$model_type)
)

# Merge with your existing data
plot_data_study_1_complete <- full_grid %>%
  left_join(plot_data_study_1, by = c("N", "reliability", "method", "parameter", "model_type"))

# Data preparation remains the same
data_plot3 <- plot_data_study_1

# Create the updated plot
p3 <- data_plot3 %>%
  ggplot(aes(x = N, y = parameter)) +
  geom_tile(aes(fill = Bias), color = "white") +
  geom_text(aes(label = sprintf("%.2f", Bias)), size = 1.5, show.legend = FALSE) +  # Reduced text size for values
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0, 
                       limits = c(-0.5, 0.5), 
                       oob = scales::squish) + 
  ggh4x::facet_nested(model_type + reliability ~ method, scales = "free", space = "free", switch="y") +
  theme_bw() +
  theme(
    text = element_text(size = 8), 
    axis.text.x = element_text(size = 5),
    axis.text.y = element_text(size = 4),
    legend.position = "right", 
    legend.title = element_text(size = 6),
    legend.text = element_text(size = 6),
    strip.text.y = element_text(size = 5),
    strip.text.x = element_text(size = 5),
    legend.key.width = unit(1, "cm"),
    panel.grid = element_line(linewidth = 0.01, color = "gray98"),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barheight = 5, barwidth = 0.5, direction = "vertical")) +
  labs(
    x = "\n Sample Size",
    y = "Parameter \n",
    fill = "Bias"
  ) +
  scale_y_discrete(expand = c(0,0), position = "right") +
  scale_x_discrete(expand = c(0,0))

print(p3)
ggplot2::ggsave("tables/abs_bias_parameterwise_study1.png", plot = p3, width = 12, height = 6.5)
```

*Note.* This figure shows the average absolute bias values for each parameter in the different conditions of simulation study 1.

Absolute Average Bias of Regression Parameters (Study 1)

:::
\elandscape

\blandscape
::: {#tbl-aggregated-bias-study1}
```{r, echo=FALSE, fig.width=12, fig.height=6}
# Create the heatmap with text labels
p_heatmap <- plot_data_aggregated_study1 %>%
  ggplot(aes(x = N, y = model_type)) +
  geom_tile(aes(fill = mean_RelativeBias), color = "white") +
  geom_text(aes(label = sprintf("%.2f", mean_Bias)), size = 3.5, color = "black") + 
  scale_fill_gradient2(low = "white", high = "red", limits = c(0, 1), oob = scales::squish) +
  ggh4x::facet_nested(reliability ~ method, scales = "free", space = "free", switch = "y") +
  theme_bw() +
  theme(
    text = element_text(size = 12), 
    axis.text.y = element_text(size = 12),  
    legend.position = "none", 
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 12),  
    strip.text.y = element_text(size = 12), 
    strip.text.x = element_text(size = 15), 
    legend.key.width = unit(0.8, "cm"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  labs(
    x = "Sample Size",
    y = "Model Type",
    fill = "Mean Bias"
  ) +
  scale_y_discrete(expand = c(0,0), position = "right") +
  scale_x_discrete(expand = c(0,0))
print(p_heatmap)
ggsave("tables/aggregated_bias_study1.png", plot = p_heatmap, width = 12, height = 6.5)
```


Note: This figure displays relative (normed) bias in absolute values of estimated regression parameters aggregated over all parameters in one model across methods and conditions of simulation study 1. The right y-axis indicates misspecifications (MP), referring to the respective omitted specification in the analysis model.


Aggregated Bias of Regression Parameters (Study 1)

:::
\elandscape

\blandscape
::: {#tbl-rel-bias-parameterwise-study2}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}
# Data for correctly specified parameters
data_plot1 <- plot_data_study_2 %>%
  filter(!parameter %in% misspecified_paths)

# Create the plot for correctly specified parameters with rounded Bias values
# Create the plot with smaller text and adjusted labels
p1 <- data_plot1 %>%
  ggplot(aes(x = N, y = parameter)) +
  geom_tile(aes(fill = Bias), color = "white") +
  geom_text(aes(label = sprintf("%.2f", round(Bias, 2))), size = 1.5, show.legend = FALSE) +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0, 
                       limits = c(-0.5, 0.5), 
                       oob = scales::squish) +
  ggh4x::facet_nested(model_type + reliability ~ method, scales = "free", space = "free", switch="y") +
  theme_bw() +
  theme(
    plot.margin = unit(c(0, 0, 0, 0), "cm"),
    text = element_text(size = 10),
    axis.text.x = element_text(size = 6),
    axis.text.y = element_text(size = 8),
    legend.position = "right", 
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 8),
    strip.text.y = element_text(size = 7),
    strip.text.x = element_text(size = 7),
    legend.key.width = unit(1.4, "cm"),
    panel.grid = element_line(linewidth = 0.01, color = "gray98"),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barheight = 7, barwidth = 0.5, direction = "vertical")) +
  labs(
    x = "\n Sample Size",
    y = "Parameter \n",
    fill = "Bias"
  ) +
  scale_y_discrete(expand = c(0,0), position = "right") +
  scale_x_discrete(expand = c(0,0))

print(p1)
ggplot2::ggsave("tables/rel_bias_parameterwise_study2.png", plot = p1, width = 12, height = 6.5)
```

*Note.* This figure shows the

Relative Average Bias of correctly specified Regression Parameters (Study 2)

:::
\elandscape

\blandscape
::: {#tbl-abs-bias-parameterwise-study2}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}
# Data for misspecified parameters
data_plot2 <- plot_data_study_2 %>%
  filter(parameter %in% misspecified_paths)

# Create the plot
p2 <- data_plot2 %>%
  ggplot(aes(x = N, y = parameter)) +
  geom_tile(aes(fill = Bias), color = "white") +
  geom_text(aes(label = sprintf("%.2f", Bias)), size = 2.5, show.legend = FALSE) +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0, 
                       limits = c(-0.5, 0.5), 
                       oob = scales::squish) +
  ggh4x::facet_nested(model_type + reliability ~ method, scales = "free", space = "free", switch="y") +
  theme_bw() +
  theme(
    text = element_text(size = 10),
    axis.text.x = element_text(size = 6),
    axis.text.y = element_text(size = 8),
    legend.position = "right", 
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 8),
    strip.text.y = element_text(size = 7),
    strip.text.x = element_text(size = 7),
    legend.key.width = unit(1.4, "cm"),
    panel.grid = element_line(linewidth = 0.01, color = "gray98"),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barheight = 7, barwidth = 0.5, direction = "vertical")) +
  labs(
    x = "\n Sample Size",
    y = "Parameter \n",
    fill = "Bias"
  ) +
  scale_y_discrete(expand = c(0,0), position = "right") +
  scale_x_discrete(expand = c(0,0))

print(p2)
ggplot2::ggsave("tables/abs_bias_parameterwise_study2.png", plot = p2, width = 12, height = 6.5)
```

*Note.* This figure shows the 

Absolute Average Bias of Regression Parameters not Present (set to 0) in the Population Model (Study 2)
:::
\elandscape

\blandscape
::: {#tbl-aggregated-rel-bias-study2}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}

# Modify R_squared, reliability, and b to create expressions for facet labels
plot_data_aggregated_study2 <- aggr_summary_study_2 %>%
  select(model_type, N, reliability, method, R_squared, b, mean_RelativeBias) %>%
  mutate(
    N = factor(N, levels = c(100, 400, 6400)),
    # Format reliability as expression string for label_parsed
    reliability_label = factor(paste0("r==", reliability)),
    method = factor(method, levels = unique(method)),
    # Format R_squared as expression string for label_parsed
    R_squared_label = factor(paste0("R^2==", R_squared)),
    # Format b as "b = X"
    b_label = factor(paste0("b==", b)),  # Use b==
    model_type = case_when(
      model_type == "2.1" ~ "no measurement MP",
      model_type == "2.2_exo" ~ "exogenous MP",
      model_type == "2.2_endo" ~ "endogenous MP",
      model_type == "2.2_both" ~ "endo- & exogenous MP",
      TRUE ~ model_type
    )
  )


p_heatmap_study2 <- plot_data_aggregated_study2 %>%
  ggplot(aes(x = N, y = model_type)) +
  geom_tile(aes(fill = mean_RelativeBias), color = "white") +
  geom_text(aes(label = sprintf("%.2f", mean_RelativeBias)), size = 2.5, color = "black") +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0, 
                       limits = c(0, 0.5), oob = scales::squish) +
  ggh4x::facet_nested(
    reliability_label ~ method + b_label + R_squared_label, 
    scales = "free", 
    space = "free", 
    switch = "y",
    labeller = label_parsed 
  ) +
  theme_bw() +
  theme(
    text = element_text(size = 8),
    axis.text.x = element_text(size = 7, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 7),
    legend.position = "right", 
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 7),
    strip.text.y = element_text(size = 7),
    strip.text.x = element_text(size = 7),
    legend.key.width = unit(0.8, "cm"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  labs(
    x = "Sample Size",
    y = "Model Type",
    fill = "Mean Bias"
  ) +
  scale_y_discrete(expand = c(0, 0), position = "right") +
  scale_x_discrete(expand = c(0, 0))

# Print the heatmap for study 2
print(p_heatmap_study2)
ggplot2::ggsave("tables/aggregated_rel_bias_study2.png", plot = p_heatmap_study2, width = 12, height = 6.5)
```

*Note.* This figure shows the aggregated relative bias (in absolute values) of the estimated regression parameters for the different methods and conditions in simulation study 2.

Aggregated Relative Bias of Regression Parameters (Study 2)

:::
\elandscape

```{r}

# Prepare data for comparison of R_squared and b
comparison_data <- plot_data_aggregated_study2 %>%
  group_by(model_type, N, reliability, method, R_squared, b) %>%
  summarise(mean_RelativeBias = mean(mean_RelativeBias, na.rm = TRUE)) %>%
  ungroup()

# Create the improved boxplot with color
p_boxplot <- comparison_data %>%
  ggplot(aes(x = factor(R_squared), y = mean_RelativeBias, fill = factor(b))) +
  geom_boxplot() +
  facet_grid(reliability ~ method, scales = "free") +
  theme_bw() +
  theme(
    text = element_text(size = 10),
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_text(size = 12),
    axis.title.y = element_text(size = 12),
    legend.position = "bottom",
    legend.title = element_text(size = 10),
    legend.text = element_text(size = 9)
  ) +
  labs(
    x = expression(R^2 ~ "Value"),
    y = "Mean Bias",
    fill = "Measurement Blocks"
  ) +
  scale_fill_manual(values = c("3" = "#9467bd", "5" = "#17becf"),
                    labels = c("b = 3", "b = 5")) +
  scale_x_discrete(labels = function(x) parse(text = paste0("R^2==", x)))

# Print the improved box plot
print(p_boxplot)
ggplot2::ggsave("tables/boxplot_study2.png", plot = p_boxplot, width = 12, height = 6.5)
```

\blandscape
::: {#tbl-abs-bias-parameterwise-study3}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}
# All parameters are correctly specified in study 3
data_plot4 <- plot_data_study_3

p4 <- data_plot4 %>%
  ggplot(aes(x = N, y = parameter)) +
  geom_tile(aes(fill = Bias), color = "white") +
  geom_text(aes(label = sprintf("%.2f", Bias)), size = 1.5, show.legend = FALSE) +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0, 
                       limits = c(-0.5, 0.5), 
                       oob = scales::squish) +
  ggh4x::facet_nested(model_type + reliability ~ method, scales = "free", space = "free", switch="y") +
  theme_bw() +
  theme(
    text = element_text(size = 8),
    axis.text.x = element_text(size = 5),
    axis.text.y = element_text(size = 4),
    legend.position = "right", 
    legend.title = element_text(size = 6),
    legend.text = element_text(size = 6),
    strip.text.y.left = element_text(size = 7),  # General y-axis label formatting
    strip.text.y = element_text(size = 15),  # Nested y-axis label formatting
    strip.text.x = element_text(size = 15),
    legend.key.width = unit(1, "cm"),
    panel.grid = element_line(linewidth = 0.01, color = "gray98"),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barheight = 5, barwidth = 0.5, direction = "vertical")) +
  labs(
    x = "\n Sample Size",
    y = "Parameter \n",
    fill = "Bias"
  ) +
  scale_y_discrete(expand = c(0,0), position = "right") +
  scale_x_discrete(expand = c(0,0))

print(p4)
ggplot2::ggsave("tables/abs_bias_parameterwise_study3.png", plot = p4, width = 12, height = 6.5)
```

*Note.* This figure shows the average absolute bias values for each parameter in the different conditions of simulation study 3.

Absolute Average Bias of Regression Parameters (Study 3)

:::
\elandscape

\blandscape
::: {#tbl-aggregated-bias-study3}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}
# Create the heatmap with text labels
p_heatmap <- plot_data_aggregated_study3 %>%
  ggplot(aes(x = N, y = model_type)) +
  geom_tile(aes(fill = mean_Bias), color = "white") +
  geom_text(aes(label = sprintf("%.2f", mean_RelativeBias)), size = 2.5, color = "black") +
  scale_fill_gradient2(low = "white", high = "red", limits = c(0, 0.5), oob = scales::squish) +
  ggh4x::facet_nested(reliability ~ method, scales = "free", space = "free", switch = "y") +
  theme_bw() +
  theme(
    text = element_text(size = 8),
    axis.text.x = element_text(size = 7, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 7),
    legend.position = "none", 
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 7),
    strip.text.y = element_text(size = 7),
    strip.text.x = element_text(size = 7),
    legend.key.width = unit(0.8, "cm"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  labs(
    x = "Sample Size",
    y = "Model Type",
    fill = "Mean Bias"
  ) +
  scale_y_discrete(expand = c(0,0), position = "right") +
  scale_x_discrete(expand = c(0,0))

# Print the heatmap
print(p_heatmap)
ggplot2::ggsave("tables/aggregated_bias_study3.png", plot = p_heatmap, width = 12, height = 6.5)
```

*Note.* Tis figure shows the aggregated bias (absolute values) of the estimated regression parameters for the different methods and conditions.

Aggregated Bias of Regression Parameters

:::
\elandscape