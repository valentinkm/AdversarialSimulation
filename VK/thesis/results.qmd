```{r, include=FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE)
```
```{r}
library(dplyr)
library(tidyr)
library(kableExtra)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
library(ggh4x)
```

```{r}
# Read convergence rate data
conv_rate_study_1 <- readRDS("../simulation/results/convergence_rate1.rds")

# Prepare data for study 1 convergence rate plot:
conv_rate1 <- conv_rate_study_1 %>%
  mutate(
    ConvergenceRate = ConvergedCount / (ConvergedCount + NotConvergedCount + ImproperSolutionCount),
    ProperSolutionRate = 1 - (ImproperSolutionCount / ConvergedCount),
    CombinedLabel = paste(sprintf("%.1f", ConvergenceRate), "\n(", sprintf("%.1f", ProperSolutionRate), ")", sep = ""),
    method = gsub("_", " ", method),
    model_type = case_when(
      model_type == "1.1" ~ "no measurement MP",
      model_type == "1.2" ~ "cross loadings",
      model_type == "1.3" ~ "correlated errors",
      model_type == "1.4" ~ "structural misspecification",
      TRUE ~ model_type
    )
  ) %>%
  mutate(
    model_type = factor(model_type, levels = c("no measurement MP", "cross loadings", "correlated errors", "structural misspecification"))
  )

# Read metrics data study 1
param_summary_study_1 <- readRDS("../simulation/results/parameter_wise_summary_study1.rds")
aggr_summary_study_1 <- readRDS("../simulation/results/aggregated_summary_study1.rds")

# Read metrics data study 2
param_summary_study_2 <- readRDS("../simulation/results/parameter_wise_summary_study2.rds")
aggr_summary_study_2 <- readRDS("../simulation/results/aggregated_summary_study2.rds")

# Prepare data for study 1 parameterwise bias plot:
plot_data_study_1 <- param_summary_study_1 %>%
  select(N, reliability, method, parameter, Bias, model_type) %>%
  mutate(
    N = factor(N, levels = c(100, 400, 6400)),
    reliability = factor(reliability, levels = c(0.3, 0.5, 0.7)),
    method = factor(method, levels = unique(method)), 
    method = gsub("_", " ", method),
    model_type = case_when(
      model_type == "1.1" ~ "no measurement MP",
      model_type == "1.2" ~ "cross loadings",
      model_type == "1.3" ~ "correlated errors",
      model_type == "1.4" ~ "structural MP",
      TRUE ~ model_type 
    ),
    reliability = factor(paste("r =", reliability), levels = paste("r =", c(0.3, 0.5, 0.7)))
  ) %>%
  arrange(parameter) %>%
  mutate(parameter = factor(parameter, levels = unique(parameter)))

# Prepare data for aggregated bias plot study 1:
plot_data_aggregated_study1 <- aggr_summary_study_1 %>%
  select(model_type, N, reliability, method, mean_Bias, mean_RelativeBias, mean_MCSE_Bias, mean_MCSE_RMSE) %>%
  mutate(
    N = factor(N, levels = c(100, 400, 6400)),
    reliability = factor(reliability, levels = c(0.3, 0.5, 0.7)),
    method = factor(method, levels = unique(method)),
    method = gsub("_", " ", method),
    model_type = case_when(
      model_type == "1.1" ~ "no MP", 
      model_type == "1.2" ~ "cross loadings",
      model_type == "1.3" ~ "correlated errors",
      model_type == "1.4" ~ "structural MP",
      TRUE ~ model_type
    ),
    model_type = factor(model_type, levels = c("structural MP", "correlated errors", "cross loadings", "no MP")),
    reliability = factor(paste("r =", reliability), levels = paste("r =", c(0.3, 0.5, 0.7)))
  )

# Prepare data for study 2 parameterwise bias plot:
misspecified_paths <- c("f3~f1", "f4~f3", "f3~f2")
plot_data_study_2 <- param_summary_study_2 %>%
  filter(R_squared == 0.4, b == 3) %>% 
  select(N, reliability, method, parameter, Bias, model_type) %>%
  mutate(
    N = factor(N, levels = c(100, 400, 6400)),
    reliability = factor(reliability, levels = c(0.3, 0.5, 0.7)),
    method = factor(method, levels = unique(method)), 
    method = gsub("_", " ", method),
    model_type = case_when(
      model_type == "2.1" ~ "no measurement MP",
      model_type == "2.2_exo" ~ "exogenous MP",
      model_type == "2.2_endo" ~ "endogenous MP",
      model_type == "2.2_both" ~ "endo- & exogenous MP",
      TRUE ~ model_type
    ),
    model_type = factor(model_type, levels = c("no measurement MP", "exogenous MP", "endogenous MP", "endo- & exogenous MP")),
    reliability = factor(paste("r =", reliability), levels = paste("r =", c(0.3, 0.5, 0.7)))
  ) %>%
  arrange(parameter) %>%
  mutate(parameter = factor(parameter, levels = unique(parameter)))
```



As shown in Figure \ref{fig:convergence-study-1} there were no convergence issues for all SAM methods (gSAM, lSAM ML and ULS) with a convergence rate of 100% and no improper solutions across all conditions even in small samples with low reliability. Standard SEM however showed severe convergence issues in small samples with low to moderate reliability with a convergence rate of as low as 50% and 50% improper solutions in the cross loading misspecification condition as the most challenging condition. 

\blandscape
::: {fig-cr-s1}
```{r fig.width=12, fig.height=5.5, fig.cap="Convergence Rate and Rate of Proper Solutions in Study 1\\label{fig:convergence-study-1}"}

# Create the heatmap with labeled metrics and heatmap fill
p_convergence_heatmap <- conv_rate1 %>%
  ggplot(aes(x = factor(N, labels = paste("N =", c(100, 400, 6400))), y = model_type)) +
  geom_tile(aes(fill = ConvergenceRate), color = "white") +
  geom_text(aes(label = CombinedLabel), size = 2.5, color = "black") +
  scale_fill_gradient2(low = "#ff6f61", mid = "#ffa500", high = "#7fc97f", midpoint = 0.5, 
                       limits = c(0, 1), oob = scales::squish, name = "Convergence Rate (%)") +
  ggh4x::facet_nested(factor(reliability, labels = paste("r =", c(0.3, 0.5, 0.7))) ~ method, 
                      scales = "free", space = "free", switch = "y") +
  theme_bw() +
  theme(
    text = element_text(size = 8),
    axis.text.x = element_text(size = 7, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 7),
    legend.position = "right", 
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 7),
    strip.text.y = element_text(size = 7),
    strip.text.x = element_text(size = 15),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  labs(
    x = "Sample Size",
    y = "Model Type"
  ) +
  scale_y_discrete(expand = c(0, 0), position = "right")

# Print the convergence heatmap
print(p_convergence_heatmap)
# ggsave("tables/convergence_rate_study1.png", plot = p_convergence_heatmap, width = 12, height = 6.5)
```

::: {fig-note}
\raggedright \textit{Note.} Convergence and proper solutions (in parentheses) rates across sample sizes (N), reliability (r), and model misspecifications for global SAM (gSAM), local SAM with Maximum Likelihood (lSAM-ML), Unweighted Least Squares (lSAM-ULS), and SEM.
:::
:::
\elandscape

Convergence rates in study 2 were consistent with this with 100% convergence rates for all SAM methods and as low as 60% for standard SEM with exogenous measurement misspecifications posing more challenges than endogenous misspecifications (see Figure \ref{fig:convergence-study-2} in Appendix B).

Next the bias of the path coeffecient estimates averaged across each model in absolute values showed that all SAM methods were more accurate than standard SEM especially under omitted cross loadings in the analysis model (See Figure 6).

\blandscape
::: {fig-bias-aggregated-study1}
```{r, echo=FALSE, fig.width=12, fig.height=5.5}
#| fig-cap: "Mean Average Bias of Regression Parameters in Study 1"

plot_aggregated_study1 <- plot_data_aggregated_study1 %>%
  mutate(
    # Create labels with mean bias (two decimal places) and MCSE (three decimal places)
    label_bias = sprintf("%.3f", mean_Bias),
    label_mcse = sprintf("(Â±%.3f)", mean_MCSE_Bias)
  ) %>%
  ggplot(aes(x = N, y = model_type)) +
  geom_tile(aes(fill = mean_Bias), color = "white") +
  # Add mean bias text
  geom_text(aes(label = label_bias), size = 4, color = "black", vjust = -0.5) +
  # Add MCSE text in smaller font and grey color
  geom_text(aes(label = label_mcse), size = 3, color = "grey40", vjust = 1.5) +
  scale_fill_gradient2(low = "white", high = "red", limits = c(0, 0.5), oob = scales::squish) +
  ggh4x::facet_nested(reliability ~ method, scales = "free", space = "free", switch = "y") +
  theme_bw() +
  theme(
    text = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    legend.position = "none",
    strip.text.y = element_text(size = 12),
    strip.text.x = element_text(size = 15),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  labs(
    x = "Sample Size",
    y = "Model Type",
    fill = "Mean Bias"
  ) +
  scale_y_discrete(expand = c(0, 0), position = "right") +
  scale_x_discrete(expand = c(0, 0))

print(plot_aggregated_study1)
# ggsave("tables/aggregated_bias_study1.png", plot = plot_aggregated_study1, width = 12, height = 6.5)
```

:::{fig-note}
\raggedright \textit{Note.} Mean absolute bias averaged (in absolute values) over all parameters with true value of 0.1 in one model for sample sizes (N), reliability (r), and misspecifications for global SAM (gSAM), local SAM with Maximum Likelihood (lSAM-ML), Unweighted Least Squares (lSAM-ULS) and SEM. Monte Carlos Standard Errors (MCSE) are shown in parentheses for each value.
:::
:::

\elandscape


