---
fig-cap-location: top
format:
  pdf:
    fontsize: 12pt
    linestretch: 1.5
    geometry: "left=25mm, right=20mm, top=20mm, bottom=20mm"
    classoption: oneside
    papersize: a4
    header-includes:
      - \usepackage{float}
      - \floatplacement{table}{H}
      - \usepackage{tikz}
      - \usetikzlibrary{arrows.meta, positioning, calc}
      - \usepackage{geometry}
      - \geometry{margin=1in}
      - \usepackage{pdflscape}
      - \usepackage{afterpage}
      - \usepackage{lscape}
      - \newcommand{\blandscape}{\begin{landscape}}
      - \newcommand{\elandscape}{\end{landscape}}

fontsize: 12pt
engine: knitr
bibliography: ../../bibliography.bib
---
```{r, include=FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE)
```


```{r}
library(dplyr)
library(tidyr)
library(kableExtra)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
library(ggh4x)

param_summary_study_1 <- readRDS("../simulation/results/parameter_wise_summary_study1.rds")
aggr_summary_study_1 <- readRDS("../simulation/results/aggregated_summary_study3.rds")

param_summary_study_2 <- readRDS("../simulation/results/parameter_wise_summary_study2.rds")
aggr_summary_study_2 <- readRDS("../simulation/results/aggregated_summary_study2.rds")

param_summary_study_3 <- readRDS("../simulation/results/parameter_wise_summary_study3.rds")
aggr_summary_study_3 <- readRDS("../simulation/results/aggregated_summary_study3.rds")

# Prepare data for study 1 parameterwise bias plot:
plot_data_study_1 <- param_summary_study_1 %>%
  select(N, reliability, method, parameter, Bias, model_type) %>%
  mutate(
    N = factor(N, levels = c(100, 400, 6400)),
    reliability = factor(reliability, levels = c(0.3, 0.5, 0.7)),
    method = factor(method, levels = unique(method)),  # Use unique method values as levels
    method = case_when(
      method == "lSAM-ML" ~ "lSAM_ML",
      method == "lSAM-ULS" ~ "lSAM_ULS",
      TRUE ~ method  # Preserve original value if no match
    ),
    model_type = case_when(
      model_type == "1.1" ~ "no measurement MP",
      model_type == "1.2" ~ "cross loadings MP",
      model_type == "1.3" ~ "correlated errors & reversed path MP",
      model_type == "1.4" ~ "bidirectional path MP",
      TRUE ~ model_type 
    ),
    reliability = factor(paste("r =", reliability), levels = paste("r =", c(0.3, 0.5, 0.7)))
  ) %>%
  arrange(parameter) %>%
  mutate(parameter = factor(parameter, levels = unique(parameter)))


misspecified_paths <- c("f3~f1", "f4~f3", "f3~f2")

# Prepare data for study 2 parameterwise bias plot:
plot_data_study_2 <- param_summary_study_2 %>%
  filter(R_squared == 0.4, b == 3) %>% 
  select(N, reliability, method, parameter, Bias, model_type) %>%
  mutate(
    N = factor(N, levels = c(100, 400, 6400)),
    reliability = factor(reliability, levels = c(0.3, 0.5, 0.7)),
    method = factor(method, levels = unique(method)), 
    method = case_when(
      method == "lSAM-ML" ~ "lSAM_ML",
      method == "lSAM-ULS" ~ "lSAM_ULS",
      TRUE ~ method
    ),
    model_type = case_when(
      model_type == "2.1" ~ "no measurement MP",
      model_type == "2.2_exo" ~ "exogenous MP",
      model_type == "2.2_endo" ~ "endogenous MP",
      model_type == "2.2_both" ~ "endo- & exogenous MP",
      TRUE ~ model_type
    ),
    reliability = factor(paste("r =", reliability), levels = paste("r =", c(0.3, 0.5, 0.7)))
  ) %>%
  arrange(parameter) %>%
  mutate(parameter = factor(parameter, levels = unique(parameter)))

# Prepare data for study 3 parameterwise bias plot:
plot_data_study_3 <- param_summary_study_3 %>%
  select(N, reliability, method, parameter, Bias, model_type) %>%
  mutate(
    N = factor(N, levels = c(50, 100, 250, 400)),
    reliability = factor(reliability, levels = c(0.3, 0.5, 0.7)),
    method = factor(method, levels = unique(method)), 
    method = case_when(
      method == "lSAM-ML" ~ "lSAM_ML",
      method == "lSAM-ULS" ~ "lSAM_ULS",
      TRUE ~ method
    ),
    model_type = case_when(
      model_type == "3.1" ~ "cross loadings MP",
      model_type == "3.2" ~ "correlated errors MP",
      model_type == "3.1_negative" ~ "negative cross loadings MP",
      model_type == "3.2_negative" ~ "negative correlated errors MP",
      TRUE ~ model_type
    ),
    reliability = factor(paste("r =", reliability), levels = paste("r =", c(0.3, 0.5, 0.7)))
  ) %>%
  arrange(parameter) %>%
  mutate(parameter = factor(parameter, levels = unique(parameter)))


```

\blandscape
::: {#tbl-rel-bias-parameterwise-study2}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}
# Data for correctly specified parameters
data_plot1 <- plot_data_study_2 %>%
  filter(!parameter %in% misspecified_paths)

# Create the plot for correctly specified parameters with rounded Bias values
# Create the plot with smaller text and adjusted labels
p1 <- data_plot1 %>%
  ggplot(aes(x = N, y = parameter)) +
  geom_tile(aes(fill = Bias), color = "white") +
  geom_text(aes(label = sprintf("%.2f", round(Bias, 2))), size = 1.5, show.legend = FALSE) +  # Further reduced size
  scale_fill_distiller(palette = 'RdBu', direction = -1, guide = "colourbar", 
                       limits = c(-0.5, 0.5)) + 
  ggh4x::facet_nested(model_type + reliability ~ method, scales = "free", space = "free", switch="y") +
  theme_bw() +
  theme(
    plot.margin = unit(c(0, 0, 0, 0), "cm"),
    text = element_text(size = 10),
    axis.text.x = element_text(size = 6),
    axis.text.y = element_text(size = 8),
    legend.position = "right", 
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 8),
    strip.text.y = element_text(size = 7),
    strip.text.x = element_text(size = 7),
    legend.key.width = unit(1.4, "cm"),
    panel.grid = element_line(linewidth = 0.01, color = "gray98"),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barheight = 7, barwidth = 0.5, direction = "vertical")) +
  labs(
    x = "\n Sample Size",
    y = "Parameter \n",
    fill = "Bias"
  ) +
  scale_y_discrete(expand = c(0,0), position = "right") +
  scale_x_discrete(expand = c(0,0))

print(p1)



```

*Note.* This figure shows the

Relative Average Bias of correctly specified Regression Parameters (Study 2)

:::
\elandscape
\blandscape
::: {#tbl-abs-bias-parameterwise-study2}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}
# Data for misspecified parameters
data_plot2 <- plot_data_study_2 %>%
  filter(parameter %in% misspecified_paths)

# Create the plot
p2 <- data_plot2 %>%
  ggplot(aes(x = N, y = parameter)) +
  geom_tile(aes(fill = Bias), color = "white") +
  geom_text(aes(label = sprintf("%.2f", Bias)), size = 2.5, show.legend = FALSE) +
  scale_fill_distiller(palette = 'RdBu', direction = -1, guide = "colourbar", 
                       limits = c(-0.5, 0.5)) + 
  ggh4x::facet_nested(model_type + reliability ~ method, scales = "free", space = "free", switch="y") +
  theme_bw() +
  theme(
    text = element_text(size = 10),
    axis.text.x = element_text(size = 6),
    axis.text.y = element_text(size = 8),
    legend.position = "right", 
    legend.title = element_text(size = 8),
    legend.text = element_text(size = 8),
    strip.text.y = element_text(size = 7),
    strip.text.x = element_text(size = 7),
    legend.key.width = unit(1.4, "cm"),
    panel.grid = element_line(linewidth = 0.01, color = "gray98"),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barheight = 7, barwidth = 0.5, direction = "vertical")) +
  labs(
    x = "\n Sample Size",
    y = "Parameter \n",
    fill = "Bias"
  ) +
  scale_y_discrete(expand = c(0,0), position = "right") +
  scale_x_discrete(expand = c(0,0))

print(p2)

```

*Note.* This figure shows the 

Absolute Average Bias of Regression Parameters not Present in the Population Model (Study 2)
:::
\elandscape
\blandscape
::: {#tbl-abs-bias-parameterwise-study1}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}
# Generate a full grid of all possible combinations
full_grid <- expand.grid(
  N = factor(c(100, 400, 6400), levels = c(100, 400, 6400)),
  reliability = factor(paste("r =", c(0.3, 0.5, 0.7)), levels = paste("r =", c(0.3, 0.5, 0.7))),
  method = unique(plot_data_study_1$method),
  parameter = unique(plot_data_study_1$parameter),
  model_type = unique(plot_data_study_1$model_type)
)

# Merge with your existing data
plot_data_study_1_complete <- full_grid %>%
  left_join(plot_data_study_1, by = c("N", "reliability", "method", "parameter", "model_type"))

# Data preparation remains the same
data_plot3 <- plot_data_study_1

# Create the updated plot
p3 <- data_plot3 %>%
  ggplot(aes(x = N, y = parameter)) +
  geom_tile(aes(fill = Bias), color = "white") +
  geom_text(aes(label = sprintf("%.2f", Bias)), size = 1.5, show.legend = FALSE) +  # Reduced text size for values
  scale_fill_distiller(palette = 'RdBu', direction = -1, guide = "colourbar", limits = c(-0.5, 0.5))+ 
  ggh4x::facet_nested(model_type + reliability ~ method, scales = "free", space = "free", switch="y") +
  theme_bw() +
  theme(
    text = element_text(size = 8),  # Reduced overall text size
    axis.text.x = element_text(size = 5),  # Smaller x-axis text
    axis.text.y = element_text(size = 4),  # Smaller y-axis text (parameters)
    legend.position = "right", 
    legend.title = element_text(size = 6),
    legend.text = element_text(size = 6),
    strip.text.y = element_text(size = 5),
    strip.text.x = element_text(size = 5),
    legend.key.width = unit(1, "cm"),
    panel.grid = element_line(linewidth = 0.01, color = "gray98"),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barheight = 5, barwidth = 0.5, direction = "vertical")) +
  labs(
    x = "\n Sample Size",
    y = "Parameter \n",
    fill = "Bias"
  ) +
  scale_y_discrete(expand = c(0,0), position = "right") +
  scale_x_discrete(expand = c(0,0))

print(p3)
```

*Note.* This figure shows the average absolute bias values for each parameter in the different conditions of simulation study 1.

Absolute Average Bias of Regression Parameters (Study 1)

:::
\elandscape
\blandscape
::: {#tbl-abs-bias-parameterwise-study3}
```{r, echo=FALSE, fig.width=12, fig.height=6.5}
# All parameters are correctly specified in study 3
data_plot4 <- plot_data_study_3

# Create the plot
# Adjust the text size in plot 4 to match plot 3
# Adjust the text size in plot 4 and extend the scale as requested
p4 <- data_plot4 %>%
  ggplot(aes(x = N, y = parameter)) +
  geom_tile(aes(fill = Bias), color = "white") +
  geom_text(aes(label = sprintf("%.2f", Bias)), size = 1.5, show.legend = FALSE) +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0, 
                       limits = c(-1.5, 1.5), 
                       oob = scales::squish) +
  ggh4x::facet_nested(model_type + reliability ~ method, scales = "free", space = "free", switch="y") +
  theme_bw() +
  theme(
    text = element_text(size = 8),
    axis.text.x = element_text(size = 5),
    axis.text.y = element_text(size = 4),
    legend.position = "right", 
    legend.title = element_text(size = 6),
    legend.text = element_text(size = 6),
    strip.text.y = element_text(size = 5),
    strip.text.x = element_text(size = 5),
    legend.key.width = unit(1, "cm"),
    panel.grid = element_line(linewidth = 0.01, color = "gray98"),
    axis.title.x = element_blank(),
    axis.title.y = element_blank()
  ) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5, barheight = 5, barwidth = 0.5, direction = "vertical")) +
  labs(
    x = "\n Sample Size",
    y = "Parameter \n",
    fill = "Bias"
  ) +
  scale_y_discrete(expand = c(0,0), position = "right") +
  scale_x_discrete(expand = c(0,0))

print(p4)



```

*Note.* This figure shows the

Absolute Average Bias of correctly specified Regression Parameters (Study 3)

:::
\elandscape
