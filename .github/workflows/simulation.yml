name: Simulation Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # Define the Docker image name for GitHub Container Registry (GHCR)
  DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/simulation_image:latest

jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest

    steps:
    # 1. Check out the code
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Set up Docker Buildx (for multi-platform builds if needed)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3. Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_TOKEN }}

    # 4. Build and push the Docker image to GHCR
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./VK/simulation
        tags: ${{ env.DOCKER_IMAGE_NAME }}
        push: true

  run_simulation_in_docker:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image

    steps:
    # 1. Check out the code again
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Log in to GitHub Container Registry (again for this job)
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_TOKEN }}

    # 3. Run the Docker container and execute the simulation
    - name: Run simulation in Docker container
      run: |
        docker pull ${{ env.DOCKER_IMAGE_NAME }}
        docker run --rm --user $(id -u):$(id -g) -v ${{ github.workspace }}/VK/simulation/results_replic:/simulation/results_replic ${{ env.DOCKER_IMAGE_NAME }}

    # 4. Debugging step: List the results directory
    - name: List results directory contents
      run: ls -l ${{ github.workspace }}/VK/simulation/results_replic

    # 5. Add and commit the results generated from the simulation
    - name: Commit and push results
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions"
        cd ${{ github.workspace }}/VK/simulation/results_replic
        git add .
        git commit -m "Add simulation results" || echo "No changes to commit"
        git push origin main
